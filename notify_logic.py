from dotenv import load_dotenv

from google_client import get_google_sheet
from datetime import datetime, timedelta
import os
from aiogram import Bot

load_dotenv()
bot = Bot(token=os.getenv("BOT_TOKEN"))

CURATOR_TO_TAG = {
    "–ü–µ—Ç—è": "@zdrpp",
    "–û–ª–µ–≥": "@oleg_vorobey1111 üêì",
    "–õ–µ—Ö–∞": "@gitfh"
}


def parse_date_safe(raw):
    try:
        return datetime.strptime(raw.strip(), "%d.%m.%Y")
    except Exception:
        return None

async def check_expired_clients():
    sheet = get_google_sheet()
    rows = sheet.get_all_values()[2:]  # –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏

    today = datetime.today()
    warning_date = today + timedelta(days=3)

    for row in rows:
        name = row[0] if len(row) > 0 else ""
        curator = resolve_curator_tag(row[2].strip() if len(row) > 2 else "")
        period = row[4] if len(row) > 4 else ""
        key_id = row[6] if len(row) > 6 else "?"

        date = parse_date_safe(period)
        if not date:
            continue

        if date <= warning_date:
            status = "–∏—Å—Ç–µ–∫–∞–µ—Ç" if date > today else "–ò–°–¢–Å–ö!"
            msg = (
                f"‚ö†Ô∏è {status} —Å—Ä–æ–∫ VPN-–∫–ª—é—á–∞!\n"
                f"üëâ –ö–ª–∏–µ–Ω—Ç: \"<b>{name}</b>\"\n"
                f"üíÖ –ö—É—Ä–∞—Ç–æ—Ä: {curator}\n"
                f"üìÖ –î–æ: <code>{date.strftime('%d.%m.%Y')}</code>\n"
                f"üÜî Key ID: <code>{key_id}</code>"
            )
            await bot.send_message(chat_id=os.getenv("TELEGRAM_CHAT_ID"), text=msg, parse_mode="HTML")


def resolve_curator_tag(name: str) -> str:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç Telegram-–Ω–∏–∫ –ø–æ –∏–º–µ–Ω–∏ –∫—É—Ä–∞—Ç–æ—Ä–∞, –µ—Å–ª–∏ –µ—Å—Ç—å –≤ —Å–ª–æ–≤–∞—Ä–µ.
    –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ —Å–ª–æ–≤–∞—Ä–µ ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∏–º—è.
    –ï—Å–ª–∏ –∏–º—è –Ω–µ —É–∫–∞–∑–∞–Ω–æ ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç "–∫—É—Ä–∞—Ç–æ—Ä –Ω–µ —É–∫–∞–∑–∞–Ω".
    """
    name = name.strip()
    if not name:
        return "–ö–∞–∫–æ–π-—Ç–æ –¥–æ–ª–±–∞–µ–± –Ω–µ —É–∫–∞–∑–∞–ª –∫—É—Ä–∞—Ç–æ—Ä–∞!"
    return CURATOR_TO_TAG.get(name, name)
